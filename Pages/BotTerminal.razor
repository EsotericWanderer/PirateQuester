@page "/Bot/{BotId:int}"
@using DFKContracts.QuestCore.ContractDefinition;
@using PirateQuester.Bot;
@using PirateQuester.Components
@using PirateQuester.DFK.Items;
@using PirateQuester.Utils;

<BotTerminalNavigation />
@code{
	private void OpenTooltip(ElementReference arg, DFKItem reward)
	{
		Tooltip.Open(arg, ds => @<div>
		<RadzenText Text=@(reward.Name) TextStyle="TextStyle.H6" />
			<div>
				<RadzenText Text=@(reward.Address) />
			</div>
			<div>
				<RadzenText Text=@(reward.Description) />
			</div>		
		</div>, 
		new()
		{
			Duration = 0,
			Style = "background-color: var(--rz-black); color:var(--rz-series-1);padding:5px;"
		});
	}
}

@if (Bots.RunningBots.Count() >= BotId + 1)
{
	<PageTitle>Bot Terminal @BotId</PageTitle>
	<RadzenText TextStyle="TextStyle.H5">
		Bot Terminal @BotId for address @Bots.RunningBots[BotId].Account.Account.Address
	</RadzenText>
	<RadzenCard class="my-1"
	   Style="background-color:var(--rz-black);
		color:var(--rz-success);
		height:250px;
		overflow:auto;">
		@if (Bots.RunningBots is null)
		{
			<span>No running bot</span>
		}
		else
		{
			foreach (DFKBotLogMessage msg in Bots.RunningBots[BotId].DFKBotLog.OrderByDescending(l => l.Id))
			{
				<span class="mr-2">@msg.TimeStamp.ToString("yyyy-MM-dd HH:mm:ss")</span>
				<span>@msg.Message</span>
				<br />
			}
		}
	</RadzenCard>
	<RadzenText Text="Recent Quests" />
	<RadzenDataGrid Data="@Bots.RunningBots[BotId].QuestRewards"
		TItem="QuestReward"
		AllowSorting="true"
		AllowColumnResize="true"
		AllowColumnReorder="true"
		Responsive="true"
		@bind-Settings=@QuestRewardsDataGridSettings
		Style="max-height:285px;">
		<Columns>
			<RadzenDataGridColumn TItem="QuestReward" Property="QuestId" Title="Id"/>
			<RadzenDataGridColumn TItem="QuestReward" Property="Heroes" Title="Heroes">
				<Template Context="reward">
					<div class="w-100 overflow-auto">
						@string.Join(", ", reward.Heroes)
					</div>
				</Template>
			</RadzenDataGridColumn>
			<RadzenDataGridColumn TItem="QuestReward" Property="Rewards.Items" Title="Items">
				<Template Context="r">
					<div class="w-100 overflow-auto">
						@foreach(DFKItem reward in r.Rewards.Items)
						{
							@if(reward.Name is not null)
							{
								@(reward.Decimals == 0 ? reward.Amount : reward.Amount / Math.Pow(10, reward.Decimals))
								if(reward.Name == "Crystal" || reward.Name == "Jewel")
								{
									<RadzenImage src="@(reward.Image)" width="24" height="24" class="mr-3" style="margin:6px;" 
										MouseEnter=@((arg) => OpenTooltip(arg, reward))/>
								}
								else
								{
									<RadzenImage src="@(reward.Image)" width="32" height="32" class="mr-3" 
										MouseEnter=@((arg) => OpenTooltip(arg, reward))/>
								}
							}
							else
							{
								@reward.Address
							}
						}
					</div>
				</Template>
			</RadzenDataGridColumn>
		</Columns>
	</RadzenDataGrid>
	<RadzenText Text="Running Quests" />
	<RadzenDataGrid Data="@Bots.RunningBots[BotId].RunningQuests.OrderBy(rq => rq.CompleteDateTime - DateTime.UtcNow)"
		TItem="Quest"
		@ref="RunningQuestsGrid"
		Responsive="true"
		AllowSorting="true"
		AllowColumnResize="true"
		AllowColumnReorder="true"
		@bind-Settings=@RunningQuestsDataGridSettings
		Style="max-height:250px;">
		<Columns>
			<RadzenDataGridColumn TItem="Quest" Property="Id" Title="Id" />
			<RadzenDataGridColumn TItem="Quest" Property="QuestName" Title="Quest" />
			<RadzenDataGridColumn TItem="Quest" Property="CompleteInText" Title="Complete in" />
			<RadzenDataGridColumn TItem="Quest" Property="HeroesText" Title="Heroes" />
		</Columns>
	</RadzenDataGrid>
}