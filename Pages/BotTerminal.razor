@page "/Bot/{BotId:int}"
@using DFKContracts.QuestCore.ContractDefinition;
@using PirateQuester.Bot;
@using PirateQuester.Components
@using PirateQuester.DFK.Items;
@using PirateQuester.Utils;

<BotTerminalNavigation />
@code{
	private void OpenTooltip(ElementReference arg, DFKItem reward)
	{
		Tooltip.Open(arg, ds => @<div>
		<RadzenText Text=@(reward.Name) TextStyle="TextStyle.H6" />
			<div>
				<RadzenText Text=@(reward.Address) />
			</div>
			<div>
				<RadzenText Text=@(reward.Description) />
			</div>		
		</div>, 
		new()
		{
			Duration = 0,
			Style = "background-color: var(--rz-black); color:var(--rz-series-1);padding:5px;"
		});
	}
}

@if (Bots.RunningBots.Count() >= BotId + 1)
{
	<PageTitle>Bot Terminal @BotId</PageTitle>
	<RadzenText TextStyle="TextStyle.H5">
		Bot Terminal @BotId for address @Bots.RunningBots[BotId].Account.Account.Address
	</RadzenText>
	<RadzenCard class="my-1"
	   Style="background-color:var(--rz-black);
		color:var(--rz-success);
		height:250px;
		overflow:auto;">
		@if (Bots.RunningBots is null)
		{
			<span>No running bot</span>
		}
		else
		{
			foreach (DFKBotLogMessage msg in Bots.RunningBots[BotId].DFKBotLog.OrderByDescending(l => l.Id))
			{
				<span class="mr-2">@msg.TimeStamp.ToString("yyyy-MM-dd HH:mm:ss")</span>
				<span>@msg.Message</span>
				<br />
			}
		}
	</RadzenCard>

	<SfGrid DataSource="@Bots.RunningBots[BotId].QuestRewards" 
		AllowResizing="true" 
		EnableVirtualization="true" 
		AllowFiltering="true"
		AllowExcelExport="true"
		Height="250">
		<GridColumns>
			<GridColumn Field="@nameof(QuestReward.QuestId)">

			</GridColumn>
			<GridColumn Field="@nameof(QuestReward.Heroes)">
				<Template>
					<div class="w-100 overflow-auto">
						@{
							var reward = context as QuestReward;
							@string.Join(", ", reward.Heroes)
						}
					</div>
				</Template>
			</GridColumn>
			<GridColumn Field="@nameof(QuestReward.Rewards)">
				<Template>
					<div class="w-100 overflow-auto">
						@{
							var r = (context as QuestReward);
							foreach (DFKItem reward in r.Rewards.Items)
							{
								@if (reward.Name is not null)
								{
									@(reward.Decimals == 0 ? reward.Amount : reward.Amount / Math.Pow(10, reward.Decimals))
									if (reward.Name == "Crystal" || reward.Name == "Jewel")
									{
										<RadzenImage src="@(reward.Image)" width="24" height="24" class="mr-3" style="margin:6px;"
							MouseEnter=@((arg) => OpenTooltip(arg, reward)) />
									}
									else
									{
										<RadzenImage src="@(reward.Image)" width="32" height="32" class="mr-3"
							MouseEnter=@((arg) => OpenTooltip(arg, reward)) />
									}
								}
								else
								{
									@reward.Address
								}
							}
						}		
					</div>
				</Template>
			</GridColumn>
		</GridColumns>
	</SfGrid>
	<SfGrid DataSource="@Bots.RunningBots[BotId].RunningQuests" 
	AllowResizing="true" 
	EnableVirtualization="true" 
	AllowFiltering="true" 
	AllowExcelExport="true" 
	Height="150">
		<GridColumns>
			<GridColumn Field="@nameof(Quest.Id)"></GridColumn>
			<GridColumn Field="@nameof(Quest.QuestName)"></GridColumn>
			<GridColumn Field="@nameof(Quest.CompleteInText)"></GridColumn>
			<GridColumn Field="@nameof(Quest.HeroesText)"></GridColumn>
		</GridColumns>
	</SfGrid>
}