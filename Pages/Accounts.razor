@using Nethereum.Web3.Accounts;
@using Utils
@inject AccountManager accounts
@inject IJSRuntime JS
@inject NavigationManager NM
@page "/Accounts"

@if (accounts.Accounts.Count > 0)
{
	<div>
		<h3>Accounts</h3>

		<div class="p-2">
		</div>
		<div>
			@foreach(KeyValuePair<string, Account> kvp in accounts.Accounts)
			{
				Account acc = kvp.Value;
				<RadzenCard class="my-3 overflow-auto text-wrap">
					<RadzenText TextStyle="TextStyle.H4">
						@kvp.Key
					</RadzenText>
					<RadzenText TextStyle="TextStyle.H6">
						Address
					</RadzenText>
					<RadzenText>
						@acc.Address
					</RadzenText>
					<RadzenText TextStyle="TextStyle.H6">
						Public Key
					</RadzenText>
					<RadzenText>
						@acc.PublicKey
					</RadzenText>
					<RadzenLabel Text="Show Private Key" Component="ShowPrivateKey" class="font-weight-bold" />
					@if (Initialized)
					{
						<RadzenCheckBox @bind-Value="ShowPrivateKey[kvp.Key]" Name="ShowPrivateKey" TValue="bool" />
						@if (ShowPrivateKey[kvp.Key])
						{
							<RadzenText TextStyle="TextStyle.H6">
								Private Key
							</RadzenText>
							<RadzenText>
								@acc.PrivateKey
							</RadzenText>
						}
					}
				</RadzenCard>
			}
		</div>
	</div>
}

@code {
	List<string> accountNames = new();
	Dictionary<string, bool> ShowPrivateKey = new();
	bool Initialized = false;
	protected override async Task OnInitializedAsync()
	{
		accountNames = await accounts.GetAccountNames(JS);
		if(accounts.Accounts.Count == 0)
		{
			if (accountNames.Count > 0)
			{
				NM.NavigateTo("Login");
			}
			else
			{
				NM.NavigateTo("CreateAccount");
			}
		}
		foreach(string name in accountNames)
		{
			ShowPrivateKey.Add(name, false);
		}
		Initialized = true;
	}
}
