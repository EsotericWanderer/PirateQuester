@using PirateQuester.Pages;
@using Utils;
@using global::Utils;
@inherits LayoutComponentBase

<SfDialog ShowCloseIcon="true" IsModal="true" @bind-Visible="@ShowTransactionsWindow">
    <DialogTemplates>
        <Header>
            <h4 class="text-center">@Transaction.FinishedTransactions.Count transactions</h4>
        </Header>
        <Content>
            <TransactionsWindow />
        </Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton CssClass="e-secondary" Content="Close" OnClick="@(() => ShowTransactionsWindow = false)" />
    </DialogButtons>
</SfDialog>


<div>
    <SfSidebar 
        Width="250px"
        MediaQuery="600px"
        EnableGestures="false"
        @bind-IsOpen=@SidebarExpanded>
        <ChildContent>
            <label class="w-100 text-center my-3">
                Sticky Sidebar
                <SfCheckBox @bind-Checked=@StickySidebar></SfCheckBox>
            </label>
            <SfButton CssClass="d-inline-block w-100 my-1" OnClick="@(() => ShowTransactionsWindow = !ShowTransactionsWindow)">
                🚀 @Transaction.FinishedTransactions.Count() Transactions
            </SfButton>
            <SfButton OnClick="@(() => Navigate(""))" CssClass="@(Nav.ToBaseRelativePath(Nav.Uri) == "" ? "w-100 my-1 e-primary" : "w-100 my-1")">
                🏴‍☠️ Home
            </SfButton>
            @if (Acc.AccountNames.Count > 0)
            {
                if (Acc.Accounts.Count > 0)
                {
                    <SfButton OnClick="@(() => Navigate("ControlCenter"))" CssClass="@(Nav.ToBaseRelativePath(Nav.Uri) == "ControlCenter" ? "w-100 my-1 e-primary" : "w-100 my-1")">
                        🎛️ Control Center
                    </SfButton>
                    @if (Acc.Accounts.Count == 1)
                    {
                        <SfButton OnClick="@(() => Navigate("Accounts"))" CssClass="@(Nav.ToBaseRelativePath(Nav.Uri) == "Accounts" ? "w-100 my-1 e-primary" : "w-100 my-1")">
                            @{
                                var address = Acc.Accounts.FirstOrDefault().Account.Address;
                                <span>📒@address.Substring(0, 4)...</span>
                                <span>@address.Substring(address.Length-4, 4)</span>
                            }
                        </SfButton>
                    }
                    else if (Acc.Accounts.Count > 1)
                    {
                        <SfButton OnClick="@(() => Navigate("Accounts"))" CssClass="@(Nav.ToBaseRelativePath(Nav.Uri) == "Accounts" ? "w-100 my-1 e-primary" : "w-100 my-1")">

                            📒 @Acc.Accounts.DistinctBy(a => a.Account.Address).Count() Accounts
                        </SfButton>
                    }
                    <SfButton OnClick="@(() => Navigate("Bot"))" CssClass="@(Nav.ToBaseRelativePath(Nav.Uri) == "Bot" ? "w-100 my-1 e-primary" : "w-100 my-1")">
                        🤖 Bot
                    </SfButton>
                }
                <SfButton OnClick="@(() => Navigate("Login"))" CssClass="@(Nav.ToBaseRelativePath(Nav.Uri) == "Login" ? "w-100 my-1 e-primary" : "w-100 my-1")">
                    👨‍💻 Login
                </SfButton>
            }
            <SfButton OnClick="@(() => Navigate("CreateAccount"))" CssClass="@(Nav.ToBaseRelativePath(Nav.Uri) == "CreateAccount" ? "w-100 my-1 e-primary" : "w-100 my-1")">
                💻 Create Account
            </SfButton>
            <SfButton OnClick="@(() => Navigate("Options"))" CssClass="@(Nav.ToBaseRelativePath(Nav.Uri) == "Options" ? "w-100 my-1 e-primary" : "w-100 my-1")">
                ⚙️ Options
            </SfButton>
            <SfButton CssClass="w-100 my-1" OnClick="@(() => NavigateExternal("https://docs.piratequester.com"))">
                🔗 Docs
            </SfButton>
            <SfButton CssClass="w-100 my-1" OnClick="@(() => NavigateExternal("https://discord.gg/kuy5tSrH9C"))">
                🔗 Discord
            </SfButton>
            <p>
                Notepad
            </p>
            <SfButton CssClass="w-100 e-primary" OnClick="@(() => ExpandNotepad = !ExpandNotepad)">
                🗁 Expand
            </SfButton>
            <SfDialog ShowCloseIcon="true" IsModal="true" @bind-Visible="@ExpandNotepad">
                <DialogTemplates>
                    <Header>
                        <h6>Notepad</h6>
                    </Header>
                    <Content>
                        <SfRichTextEditor @bind-Value="NotePad" HtmlAttributes="@(new(){{"spellcheck", "false"}})" />
                    </Content>
                </DialogTemplates>
                <DialogButtons>
                    <DialogButton Content="Close" OnClick="@(() => ExpandNotepad = !ExpandNotepad)" />
                </DialogButtons>
            </SfDialog>
            <div style="overflow:auto;max-height:400px;margin-top:5px;">
                <SfRichTextEditor @bind-Value="NotePad" HtmlAttributes="@(new(){{"spellcheck", "false"}})">
                    
                </SfRichTextEditor>
            </div>
        </ChildContent>
    </SfSidebar>
    <div>
        <SfAppBar>
            <SfButton CssClass="e-inherit" IconCss="e-icons e-menu" OnClick="@(() => SidebarExpanded = !SidebarExpanded)"></SfButton>
            <AppBarSpacer></AppBarSpacer>
            <a href="/">
                <img src="/Images/pirate-quester-logo.png" width="225" height="30" class="ml-5" style="background-color:#292827;" />
            </a>
            <h6 style="white-space:nowrap;" class="d-inline-block mx-2 mt-2">
                @($"V{Constants.VERSION}")
            </h6>
            <AppBarSpacer></AppBarSpacer>
        </SfAppBar>
        <main @onclick=@(() => HideSidebar())>
            <div>
                @Body
            </div>
        </main>
    </div>
</div>